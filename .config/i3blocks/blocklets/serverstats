#!/bin/bash

set -e

CIRCLE_FULL=""
CIRCLE_EMPTY=""
CIRCLE_EMPTY_NOTCH=""
CIRCLE_CHECK=""
CIRCLE_CROSS=""
CIRCLE_EXCLAMATION=""

SERVER_LIST_FILE=~/.config/serverstats

function getServerStatus() {
  address="$1"
  ping -c1 -W1 ${address} > /dev/null 2>&1
  if [ ${?} -eq 0 ]; then
    return 0
  else
    return 1
  fi
}

function getServerStatusSymbol() {
  status="$1"
  name="$2"
  if [ $status == "on" ]; then
    #echo "$(tput setaf 2)$CIRCLE_FULL $name$(tput sgr0)"
    echo "$CIRCLE_CHECK $name"
  else
    #echo "$(tput setaf 1)$CIRCLE_CROSS $name$(tput sgr0)"
    echo "$CIRCLE_EXCLAMATION $name"
  fi
}

function getServerData() {
  address="$1"
}

[[ ! -f $SERVER_LIST_FILE ]] && \
  exit 0

output=""
OLDIFS=$IFS
IFS=,
while read name address type; do
  [[ $name =~ ^#.* ]] && \
    output+="\n\\${name:2}\n" && continue
  [[ $type == "server" ]] && \
    server_count=$(($server_count+1))
  if getServerStatus $address; then
    [[ $type == "server" ]] && server_online_count=$(($server_online_count+1))
    output+="$(getServerStatusSymbol on $name) $(getServerData $address)\n"
  else
    output+="$(getServerStatusSymbol off $name)\n"
  fi
done < $SERVER_LIST_FILE
IFS=$OLDIFS

if [[ $server_online_count -le 1 ]]; then
  echo "$CIRCLE_CROSS"
elif [[ $server_online_count -lt $(expr $server_count/2) ]]; then
  echo "$CIRCLE_EXCLAMATION"
elif [[ $server_online_count != $server_count ]]; then
  echo "$CIRCLE_EMPTY_NOTCH"
else
  echo "$CIRCLE_EMPTY"
fi

case "$BLOCK_BUTTON" in
  1) notify-send -t 10000 "Server status" "$output" ;;
esac
